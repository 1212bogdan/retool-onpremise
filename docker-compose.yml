# See https://docs.retool.com/self-hosted/concepts/temporal#compare-options for Temporal options
# We recommend using Retool-managed, uncomment below if you need to run your own locally
# include:
  # - temporal.yaml

services:
  api:
    build:
      context: ./
    env_file: ./docker.env
    environment:
      - SERVICE_TYPE=MAIN_BACKEND,DB_CONNECTOR,DB_SSH_CONNECTOR
    networks:
      - frontend-network
      - backend-network
      - code-executor-network
    depends_on:
      - postgres
      - retooldb-postgres
      - jobs-runner
      - workflows-worker
      - code-executor
    command: bash -c "./docker_scripts/wait-for-it.sh postgres:5432; ./docker_scripts/start_api.sh"
    links:
      - postgres
    ports:
      - "3000:3000"
    restart: on-failure

  jobs-runner:
    build:
      context: ./
    env_file: ./docker.env
    environment:
      - SERVICE_TYPE=JOBS_RUNNER
    networks:
      - backend-network
    depends_on:
      - postgres
    command: bash -c "chmod -R +x ./docker_scripts; sync; ./docker_scripts/wait-for-it.sh postgres:5432; ./docker_scripts/start_api.sh"
    links:
      - postgres

  workflows-worker:
    build:
      context: ./
    command: bash -c "./docker_scripts/wait-for-it.sh postgres:5432; ./docker_scripts/start_api.sh"
    env_file: ./docker.env
    environment:
      - SERVICE_TYPE=WORKFLOW_TEMPORAL_WORKER
      - NODE_OPTIONS=--max_old_space_size=1024
    networks:
      - backend-network
      - code-executor-network
    restart: on-failure

  workflows-backend:
    build:
      context: ./
    env_file: ./docker.env
    environment:
      - SERVICE_TYPE=WORKFLOW_BACKEND,DB_CONNECTOR,DB_SSH_CONNECTOR
    networks:
      - backend-network
      - code-executor-network
    depends_on:
      - postgres
      - retooldb-postgres
      - workflows-worker
      - code-executor
    command: bash -c "./docker_scripts/wait-for-it.sh postgres:5432; ./docker_scripts/start_api.sh"
    links:
      - postgres
    restart: on-failure

  code-executor:
    build:
      context: ./
      target: code-executor
    command: bash -c "./start.sh"
    env_file: ./docker.env
    environment:
      - NODE_OPTIONS=--max_old_space_size=1024
    networks:
      - code-executor-network
    # Privileged access is required to sandbox user code execution and to use custom libraries
    # If your deployment does not support this, set to false and run container as retool_user
    privileged: true
    restart: on-failure

  # Retool's storage database. See these docs to migrate to an externally hosted database: https://docs.retool.com/docs/configuring-retools-storage-database
  postgres:
    image: "postgres:15.12"
    env_file: docker.env
    networks:
      - backend-network
    volumes:
      - data:/var/lib/postgresql/data

  retooldb-postgres:
    image: "postgres:15.12"
    env_file: retooldb.env
    networks:
      - backend-network
    volumes:
      - retooldb-data:/var/lib/postgresql/data

  # Not required, but leave this container to use nginx for handling the frontend & SSL certification
  https-portal:
    image: tryretool/https-portal:latest
    ports:
      - "80:80"
      - "443:443"
    links:
      - api
    restart: always
    env_file: ./docker.env
    environment:
      STAGE: "local" # <- Change 'local' to 'production' to use a LetsEncrypt signed SSL cert
      CLIENT_MAX_BODY_SIZE: 40M
      KEEPALIVE_TIMEOUT: 605
      PROXY_CONNECT_TIMEOUT: 600
      PROXY_SEND_TIMEOUT: 600
      PROXY_READ_TIMEOUT: 600
    networks:
      - frontend-network

networks:
  frontend-network:
  backend-network:
  code-executor-network:

volumes:
  data:
  retooldb-data:
